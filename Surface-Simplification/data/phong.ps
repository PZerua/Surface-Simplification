
uniform vec3 view;
uniform vec3 light;
uniform vec3 specularColor;
uniform vec3 ambientColor;
uniform vec3 diffuseColor;

varying vec3 normal;
varying vec4 vertex;

void main (void)
{
	vec3 diffuse;
	vec3 spec = vec3(0.0);
	vec3 ambient;
	
	vec3 N = normalize(normal);
	vec3 L = normalize(light - vertex.xyz);
	vec3 R = normalize(reflect(-L, N)); 
	vec3 V = normalize(view - vertex.xyz);

   	ambient = ambientColor;
	diffuse = clamp( diffuseColor* max(dot(N,L), 0.0)  , 0.0, 1.0 ) ;
	spec = specularColor * pow(max(dot(R,V), 0.0), 8.0);
	gl_FragColor = vec4(ambient + diffuse + spec, 1.0);
}